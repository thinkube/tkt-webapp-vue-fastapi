<!-- src/components/NavBar.vue -->
<template>
  <div class="navbar bg-base-100 shadow-md">
    <div class="navbar-start">
      <div class="dropdown">
        <label tabindex="0" class="btn btn-ghost lg:hidden">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16" />
          </svg>
        </label>
        <ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52">
          <li><router-link to="/">{% raw %}{{ t('nav.home') }}{% endraw %}</router-link></li>
          {% if enable_api_tokens -%}
          <li><router-link to="/tokens">{% raw %}{{ t('nav.apiTokens') }}{% endraw %}</router-link></li>
          {% endif -%}
        </ul>
      </div>
      <router-link to="/" class="btn btn-ghost normal-case text-xl">{% raw %}{{ t('app.title') }}{% endraw %}</router-link>
    </div>
    
    <div class="navbar-center hidden lg:flex">
      <ul class="menu menu-horizontal px-1">
        <li><router-link to="/">{% raw %}{{ t('nav.home') }}{% endraw %}</router-link></li>
        {% if enable_api_tokens -%}
        <li><router-link to="/tokens">{% raw %}{{ t('nav.apiTokens') }}{% endraw %}</router-link></li>
        {% endif -%}
      </ul>
    </div>
    
    <div class="navbar-end">
      <label class="swap swap-rotate mr-4">
        <input type="checkbox" v-model="isDarkMode" @change="toggleTheme" />
        <!-- sun icon -->
        <svg class="swap-on fill-current w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
          <path d="M5.64,17l-.71.71a1,1,0,0,0,0,1.41,1,1,0,0,0,1.41,0l.71-.71A1,1,0,0,0,5.64,17ZM5,12a1,1,0,0,0-1-1H3a1,1,0,0,0,0,2H4A1,1,0,0,0,5,12Zm7-7a1,1,0,0,0,1-1V3a1,1,0,0,0-2,0V4A1,1,0,0,0,12,5ZM5.64,7.05a1,1,0,0,0,.7.29,1,1,0,0,0,.71-.29,1,1,0,0,0,0-1.41l-.71-.71A1,1,0,0,0,4.93,6.34Zm12,.29a1,1,0,0,0,.7-.29l.71-.71a1,1,0,1,0-1.41-1.41L17,5.64a1,1,0,0,0,0,1.41A1,1,0,0,0,17.66,7.34ZM21,11H20a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Zm-9,8a1,1,0,0,0-1,1v1a1,1,0,0,0,2,0V20A1,1,0,0,0,12,19ZM18.36,17A1,1,0,0,0,17,18.36l.71.71a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.41ZM12,6.5A5.5,5.5,0,1,0,17.5,12,5.51,5.51,0,0,0,12,6.5Zm0,9A3.5,3.5,0,1,1,15.5,12,3.5,3.5,0,0,1,12,15.5Z" />
        </svg>
        <!-- moon icon -->
        <svg class="swap-off fill-current w-5 h-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
          <path d="M21.64,13a1,1,0,0,0-1.05-.14,8.05,8.05,0,0,1-3.37.73A8.15,8.15,0,0,1,9.08,5.49a8.59,8.59,0,0,1,.25-2A1,1,0,0,0,8,2.36,10.14,10.14,0,1,0,22,14.05,1,1,0,0,0,21.64,13Zm-9.5,6.69A8.14,8.14,0,0,1,7.08,5.22v.27A10.15,10.15,0,0,0,17.22,15.63a9.79,9.79,0,0,0,2.1-.22A8.11,8.11,0,0,1,12.14,19.73Z" />
        </svg>
      </label>
      
      <!-- Language selector -->
      <div class="dropdown dropdown-end mr-2">
        <label tabindex="0" class="btn btn-ghost btn-sm">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129" />
          </svg>
          <span class="ml-1">{% raw %}{{ currentLocale.toUpperCase() }}{% endraw %}</span>
        </label>
        <ul tabindex="0" class="mt-3 z-[1] p-2 shadow menu menu-sm dropdown-content bg-base-100 rounded-box w-52">
          <li><a @click="changeLocale('en')">English</a></li>
          <li><a @click="changeLocale('es')">Español</a></li>
          <li><a @click="changeLocale('ca')">Català</a></li>
        </ul>
      </div>
      
      <ProfileDropdown :user="user" @logout="handleLogout" />
    </div>
  </div>
</template>

<script setup>
import { ref, onMounted } from 'vue'
import { useI18n } from 'vue-i18n'
import { useRouter } from 'vue-router'
import { useAuthStore } from '@/stores/auth'
import ProfileDropdown from './ProfileDropdown.vue'

const props = defineProps({
  user: {
    type: Object,
    required: true
  }
})

const { t, locale } = useI18n()
const router = useRouter()
const authStore = useAuthStore()
const currentLocale = ref(locale.value)
const isDarkMode = ref(false)

const handleLogout = async () => {
  await authStore.logout()
  router.push('/login')
}

const changeLocale = (newLocale) => {
  locale.value = newLocale
  currentLocale.value = newLocale
  localStorage.setItem('locale', newLocale)
}

const toggleTheme = () => {
  const theme = isDarkMode.value ? 'dark' : 'light'
  document.documentElement.setAttribute('data-theme', theme)
  localStorage.setItem('theme', theme)
}

onMounted(() => {
  // Load saved locale
  const savedLocale = localStorage.getItem('locale')
  if (savedLocale && ['en', 'es', 'ca'].includes(savedLocale)) {
    locale.value = savedLocale
    currentLocale.value = savedLocale
  }
  
  // Load saved theme
  const savedTheme = localStorage.getItem('theme') || 'light'
  isDarkMode.value = savedTheme === 'dark'
  document.documentElement.setAttribute('data-theme', savedTheme)
})
</script>